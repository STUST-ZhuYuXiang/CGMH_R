POLIO_Incidence.l %>% group_by(YEAR,State) %>%
summarize(IncidenceSum=sum(Incidence,na.rm = T))
library(ggplot2)
polioPlot<-ggplot(POLIO_Incidence.l.y, aes(YEAR, State)) +
geom_tile(aes(fill = IncidenceSum),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue") +
theme_minimal()
POLIO_Incidence.l
polioPlot<-ggplot(POLIO_Incidence.l.y, aes(YEAR, State)) +
geom_tile(aes(fill = IncidenceSum),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue") +
theme_minimal()
POLIO_Incidence.l.y
polioPlot
library(readr)
EMDiagS <- read_csv("~/GitHub/CGMH_R/EMDiagS.csv")
View(EMDiagS)
library(readr)
EMDiagS <- read_csv("EMDiagS.csv") #自行載入
View(EMDiagS)
as.numeric("abc")
as.character(EMDiagS$資料年月)
library(readr)
EMDiagS <-
read_csv("~/GitHub/CGMH_R/EMDiagS.csv")
View(EMDiagS)
View(EMDiagS)
class(EMDiagS$輸入日期)
=======
>>>>>>> Stashed changes
library(lubridate)
ymd('2012/3/3')
library(lubridate)
ymd('2012/3/3')
EMDiagS$輸入日期
ymd(EMDiagS$輸入日期)
ymd(EMDiagS$輸入日期)
class(EMDiagS$輸入日期)
View(iris)
iris$Time<-1
View(iris)
EMDiagS$輸入日期Date<-
ymd(EMDiagS$輸入日期)
class(EMDiagS$輸入日期Date)
class(EMDiagS$輸入日期Date)
grep("A|a",c("Alex","Tom","Amy","Joy","Emma"))
grep("A|a|l|e",c("Alex","Tom","Amy","Joy","Emma"))
grep("A|a|o",c("Alex","Tom","Amy","Joy","Emma"))
EMDiagS$疾病碼
grep("250",EMDiagS$疾病碼)
grepl("250",EMDiagS$疾病碼)
grep("250",EMDiagS$疾病碼)
EMDiagS$疾病碼[62]
EMDiagS$疾病碼[1574]
1:3
1:20
iris[1:10,"Species"]
nrow(iris)
seq(1,nrow(iris),2)
colnames(iris)
EMDiagS$疾病碼=="25000"
EMDiagS[EMDiagS$疾病碼=="25000",]
EMDiagS[EMDiagS$疾病碼=="25000",]
EMDiagS[grep("^250",EMDiagS$疾病碼),]
check<-EMDiagS[grep("^250",EMDiagS$疾病碼),]
View(check)
NameID<-data.frame(Name=c("Tom","Amy","John"),ID=c(1,2,3))
Score<-data.frame(ID=c(1,3),Score=c(90,100))
View(NameID)
View(Score)
library(dplyr)
inner_join(NameID,Score)
full_join(NameID,Score)
semi_join(NameID,Score)
inner_join(NameID,Score)
OptDiagS <- read_csv("OptDiagS.csv")
OptOrderS <- read_csv("OptOrderS.csv")
OptDiagOrder<-inner_join(OptDiagS,OptOrderS,
by=c("歸戶代號","門診號"))
View(OptDiagOrder)
View(OptDiagS)
View(OptOrderS)
table(EMDiagS$掛號科別)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length)) +
geom_point()+facet_grid(.~Species)
library(ggplot2)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length)) +
geom_point()+facet_grid(.~Species)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()+facet_grid(.~Species)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot()
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot()+labs(x="test x",y="test y")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_fill_grey(start = 0.2, end = 0.8,
na.value = "red")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0.2, end = 0.8,
na.value = "red")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0.4, end = 1)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.8)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.7)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.6)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.9)
library(SportsAnalytics)
#擷取2015-2016年球季球員資料
NBA1516<-fetch_NBAPlayerStatistics("17-18")
library(mlbench)
library(mlbench)
data("PimaIndiansDiabetes")
?PimaIndiansDiabetes
data("ToothGrowth")
ToothGrowth
?ToothGrowth
lm(len~dose,
data =ToothGrowth)
glm(len ~ supp+dose,
data =ToothGrowth)
PimaIndiansDiabetes$library(mlbench)
data("PimaIndiansDiabetes2")
library(mlbench)
data("PimaIndiansDiabetes2")
fit<-glm(diabetes~.,
data =PimaIndiansDiabetes2[PimaIndiansDiabetes2$Test==F,])
summary(fit)$coefficients
fit<-glm(diabetes~.,
data =PimaIndiansDiabetes2)
summary(fit)$coefficients
View(PimaIndiansDiabetes2)
?predict
str)PimaIndiansDiabetes2
str(PimaIndiansDiabetes2)
library(caret)
set.seed(3456)
trainIndex <-
createDataPartition(iris$Species,
p = .8,
list = FALSE,
times = 1)
head(trainIndex)
iris$fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
trainIndex <-
createDataPartition(iris$Species,
p = .8,
list = FALSE,
times = 1)
head(trainIndex)
trainData<-iris[trainIndex,]
testData<-iris[-trainIndex,]
set.seed(825)
DTFit1 <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl)
DTFit1
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE,
summaryFunction = twoClassSummary)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
fitControl <-
trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE,
summaryFunction = twoClassSummary)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .8,
list = FALSE,
times = 1)
head(trainIndexBinary)
library(mlbench)
data("PimaIndiansDiabetes2")
PD2<-
PimaIndiansDiabetes2[complete.cases(PimaIndiansDiabetes2),]
head(PD2$diabetes)
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .8,
list = FALSE,
times = 1)
head(trainIndexBinary)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
fitControlBinary <-
trainControl(method = "repeatedcv",
number = 10,
repeats = 10,
## Estimate class probabilities
classProbs = TRUE,
## Evaluate performance using
## the following function
summaryFunction = twoClassSummary)
set.seed(825)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
library(caret)
set.seed(3456)
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .75,
list = FALSE,
times = 1)
head(trainIndexBinary)
```
caret: data splitting
====================================
`createDataPartition`
```{R}
trainDataBinary<-PD2[trainIndexBinary,]
testDataBinary<-PD2[-trainIndexBinary,]
set.seed(825)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
pred<-predict(DTFitBinary,
newdata = testDataBinary,
type = "prob")
pred
confusionMatrix(data = pred, reference = testBinary$diabetes)
confusionMatrix(data = pred$pos, reference = testBinary$diabetes)
install.packages("mlbench")
install.packages("rpart.plot")
?boxplot
plot(x=PD2[PD2$Test==T,"diabetes"],
y=predictPoint)
library(pROC)
?roc
library(readr)
DiagSum <- read_csv("DiagSumS.csv")
str(DiagSum)
View(DiagSum)
DiagSum$DiagSum %>%
filter(診斷類別1 %in% c("174.0","174.1"))
library(dplyr)
DiagSum %>%
<<<<<<< Updated upstream
filter(診斷類別1 %in% c("174.0","174.1"))
SelectedCase<-DiagSum %>%
filter(診斷類別1 %in% c("1740","1741"))
View(SelectedCase)
SelectedCase %>%
select(歸戶代號,診斷類別1,住院日期) %>% head()
library(lubridate)
DiagSum$住院日期
=======
select(院區,歸戶代號,住院日期,starts_with("診斷類別")) %>%
gather(診斷類別,診斷碼,starts_with("診斷類別"))
devtools::install_github("DHLab/emr")
devtools::install_github("DHLab-CGU/emr")
install.packages("kintr")
install.packages("knitr")
install.packages(c("dplyr","icd",
"AdhereR","devtools"))
devtools::install_github("DHLab-CGU/emr")
install.packages("PheWAS")
install.packages(c("tidyr","ggplot2",
"MASS","meta","ggrepel","DT"))
devtools::install_github("DHLab-CGU/emr")
devtools::install_github("PheWAS/PheWAS")
devtools::install_github("DHLab-CGU/emr")
library(icd)
?icd_short_to_decimal
?icd_charlson
?icd9_comorbid_quan_deyo
library(emr)
warnings()
?groupIcdBasedOnCCS
library(readr)
DiagSum <- read_csv("DiagSumS.csv")
library(lubridate)
head(DiagSum$住院日期)
DiagSum$AdmDate<-ymd(DiagSum$住院日期)
head(DiagSum$AdmDate)
library(emr)
groupIcdBasedOnCCS(DiagSum,歸戶代號1,
診斷類別1,AdmDate,"2016-01-01")
data(ccsDxICD9_fullLabel)
data(ccsDxICD9_fullLabel)
?icd10_comorbid_ahrq
library(icd)
icd::icd10_comorbid_ccs(DiagSumICD10 %>%
select(歸戶代號,診斷類別1))
library(dplyr)
library(icd)
icd::icd10_comorbid_ccs(DiagSumICD10 %>%
select(歸戶代號,診斷類別1))
?icd10_comorbid_ccs
?groupIcdBasedOnComorbid
DxDataFile <- data.frame(ID=c("A","A","A"),
ICD=c("6929","V433","I350"),
Date=as.Date(c("2013-03-31","2013-01-29","2016-03-10")),
stringsAsFactors = F)
groupIcdBasedOnComorbid(DxDataFile, ID, ICD, Date, "2016-01-01", ahrq, N, T)
library(emr)
groupIcdBasedOnComorbid(DiagSum,歸戶代號,
診斷類別1,AdmDate,"2016-01-01", ahrq, N)
groupIcdBasedOnComorbid(DiagSum,歸戶代號,
診斷類別1,AdmDate,"2016-01-01", ahrq, N)
DxDataFile <- data.frame(ID=c("A","A","B"),
ICD=c("6929","V433","I350"),
Date=as.Date(c("2013-03-31","2013-01-29","2016-03-10")),
stringsAsFactors = F)
groupIcdBasedOnComorbid(DxDataFile, ID, ICD, Date, "2016-01-01", ahrq, N, T)
DxDataFile <- data.frame(ID=c("A","A","B"),
ICD=c("6929","V433","I350"),
Date=as.Date(c("2013-03-31","2013-01-29","2016-03-10")),
stringsAsFactors = F)
groupIcdBasedOnComorbid(DxDataFile, ID, ICD, Date, "2016-01-01", ahrq, N, T)
?filter_at
selectSuperClasses()
?select
DiagSumForGather<-DiagSum %>%
select(院區,歸戶代號,住院日期,num_range("診斷類別",1:6))
DiagSumForGather
DiagSum$DiagCount<-DiagSum %>%
group_by(歸戶代號,診斷類別1) %>%
arrange(歸戶代號,診斷類別1,AdmDate)%>%
mutate(Gap=(lead(AdmDate)-AdmDate),isFit=Gap<365) %>%
summarise(Count=sum(isFit,na.rm = T))
knitr::kable(DiagCount[1:10,])
DiagCount<-DiagSum %>%
group_by(歸戶代號,診斷類別1) %>%
arrange(歸戶代號,診斷類別1,AdmDate)%>%
mutate(Gap=(lead(AdmDate)-AdmDate),isFit=Gap<365) %>%
summarise(Count=sum(isFit,na.rm = T))
knitr::kable(DiagCount[1:10,])
View(DiagCount)
library(readr)
LabSum <- read_csv("LabS.csv")
View(LabSum)
install.packages("mlbench")
install.packages("rpart")
install.packages("rpart")
install.packages("prp")
library(rpart.plot)
install.packages("rpart.plot")
library(dplyr)
library(mlbench)
data(Sonar)
Sonar %>% View()
library(caret)
install.packages("caret")
library(caret)
install.packages("robustbase")
library(caret)
install.packages("")
install.packages("robustbase")
library(caret)
install.packages("caret",
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Imports", "Suggests"))
BasicS <- read_csv("BasicS.csv")
DiagSumLong<-DiagSumForGather %>%
gather(診斷類別,診斷碼,starts_with("診斷類別"))
DiagSum %>%
group_by(歸戶代號,診斷類別1) %>%
arrange(歸戶代號,診斷類別1,AdmDate)%>%
mutate(Gap=(lead(AdmDate)-AdmDate),isFit=Gap<365) %>%
select(歸戶代號,診斷類別1,AdmDate,Gap,isFit) %>%
filter(歸戶代號=="43CCF41959798888F18EAED638A141F37A2B15C8") %>%
head()
DiagSum %>%
group_by(歸戶代號,診斷類別1) %>%
arrange(歸戶代號,診斷類別1,AdmDate)%>%
mutate(Gap=(lead(AdmDate)-AdmDate),isFit=Gap<365) %>%
select(歸戶代號,診斷類別1,AdmDate,Gap,isFit) %>%
filter(歸戶代號=="43CCF41959798888F18EAED638A141F37A2B15C8") %>%
head()
>>>>>>> Stashed changes
```{R}
library(metafor) # Load package
data(dat.bcg) # BCG meta-analytic dataset
str(dat.bcg)
install.packages("RISmed")
forest(result.ormr)
library(metafor)
result.ormr <-
rma(ai = tpos, bi = tneg, ci = cpos, di = cneg,
data = dat.bcg,
mods = dat.bcg[, "ablat"],
measure = "OR", method = "DL")
summary(result.ormr)
forest(result.ormr)
result.ormr
result.ormr$k
2000 + sample(0:9, result.ormr$k, replace = T)
result.ormr$b
?forest.rma
forest(result.ormr)
result.ormr$b
result.ormr$b
result.ormr$ci.lb
result.ormr$beta
result.ormr$intercept
?dat.bcg
cases <- leave1out(result.ormr)
